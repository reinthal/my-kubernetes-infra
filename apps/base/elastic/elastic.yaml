# This sample sets up an Elasticsearch cluster with 3 nodes.
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  # uncomment the lines below to copy the specified node labels as pod annotations and use it as an environment variable in the Pods
  #annotations:
  #  eck.k8s.elastic.co/downward-node-labels: "topology.kubernetes.io/zone"
  name: elasticsearch
  namespace: elastic-system
spec:
  version: 8.12.1
  nodeSets:
  - name: default
    config:
      # most Elasticsearch configuration parameters are possible to set, e.g: node.attr.attr_name: attr_value
      node.roles: ["master", "data", "ingest", "ml"]
      # this allows ES to run on nodes even if their vm.max_map_count has not been increased, at a performance cost
      node.store.allow_mmap: false
      # uncomment the lines below to use the zone attribute from the node labels
      #cluster.routing.allocation.awareness.attributes: k8s_node_name,zone
      #node.attr.zone: ${ZONE}
      spec:
        # this changes the kernel setting on the node to allow ES to use mmap
        # if you uncomment this init container you will likely also want to remove the
        # "node.store.allow_mmap: false" setting above
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        ###
        # uncomment the line below if you are using a service mesh such as linkerd2 that uses service account tokens for pod identification.
        # automountServiceAccountToken: true
        containers:
        - name: elasticsearch
          # specify resource limits and requests
          resources:
            limits:
              memory: 3.5Gi
              cpu: 4
          env:
          # uncomment the lines below to make the topology.kubernetes.io/zone annotation available as an environment variable and
          # use it as a cluster routing allocation attribute.
          #- name: ZONE
          #  valueFrom:
          #    fieldRef:
          #      fieldPath: metadata.annotations['topology.kubernetes.io/zone']
          - name: ES_JAVA_OPTS
            value: "-Xms2g -Xmx2g"
        #topologySpreadConstraints:
        #  - maxSkew: 1
        #    topologyKey: topology.kubernetes.io/zone
        #    whenUnsatisfiable: DoNotSchedule
        #    labelSelector:
        #      matchLabels:
        #        elasticsearch.k8s.elastic.co/cluster-name: elasticsearch-sample
        #        elasticsearch.k8s.elastic.co/statefulset-name: elasticsearch-sample-es-default
    count: 3
  #   # request 2Gi of persistent data storage for pods in this topology element
  #  volumeClaimTemplates:
  #  - metadata:
  #      name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
  #      namespace: elastic-system
  #    spec:
  #      accessModes:
  #      - ReadWriteOnce
  #      resources:
  #        requests:
  #          storage: 50Gi
  #      storageClassName: longhorn